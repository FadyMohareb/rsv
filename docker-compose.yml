services:
    web:
      build: ./services/web
      command: gunicorn --worker-class gevent manage:app --bind 0.0.0.0:5000 
      container_name: web
      volumes:
        - ./services/web/:/usr/src/app/
        - ./services/frontend:/usr/src/app/frontend_mount  # Mount docs from frontend
      ports:
        - 5000:5000
      environment:
        - WEBSITE_NAME=localhost
        - SUBDIRECTORY_NAME=/rsv
        - REDIS_PORT=6379
      env_file:
        - ./.env.dev
      depends_on:
        - db
        - redis
    db:
      image: postgres:13
      volumes:
        - postgres_data:/var/lib/postgresql/data/
      environment:
        - POSTGRES_USER=hello_flask
        - POSTGRES_PASSWORD=hello_flask
        - POSTGRES_DB=hello_flask_dev
    worker:
      build: ./services/web
      command: python3 manage.py run_worker
      volumes:
        - ./services/web/:/usr/src/app/
      environment:
        - WEBSITE_NAME=localhost
        - SUBDIRECTORY_NAME=/rsv
        - REDIS_PORT=6379
      env_file:
        - ./.env.dev
      depends_on:
        - redis
    redis:
      image: redis:6.2-alpine
      ports:
      - "6379:6379"  # Expose Redis on port 6379
    dashboard:
      build: ./services/rq-dashboard
      container_name: rq_dashboard
      ports:
        - 9181:9181
      command: rq-dashboard -u redis://redis:6379/0
      depends_on:
        - redis
      # Front-End Service
    frontend:
      build:
        context: ./services/frontend # If there is a subdirectory to the URL, modify .env and add it to package.json "homepage"
        target: development
      container_name: frontend
      volumes:
        - ./services/frontend:/usr/src/app/frontend_mount  # Mount docs to the web service
      ports:
        - 3000:3000  # Expose port 80 for the front-end
      depends_on:
        - web  # Wait for the web service to be ready
    nginx:
      container_name: nginx
      restart: always
      build: ./services/nginx
      environment:
        - WEBSITE_NAME=localhost # If there is a subdirectory to the URL, code must be modified
        - WEBSITE_ROOT=localhost
      ports:
        - "80:80"
      depends_on:
        - web
        - frontend
volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
